When you first start for the day always do a pull in the drone directory

        git pull

When you want to push changes you've made, add them, commit them, and push them

        git pull                (always pull before you push)

        git add .               (to add all changes made in the directory)
                OR
        git add File_Name       (to add changes made on a particular file
                                if you're not ready to push other changes made yet)


        git commit -m "Write comment here"

        git push



Other cool commands to know

        git diff                (to show all the changes between the files on
                                your system and the files pushed to github so far.
                                Shows nothing if there are no chagnes)

        git diff FileName       (show changes between github and your system for
                                a specific file if changes have been made)

        git reset               (removes all files from the staging area and will
                                have to be readded)

        git status              (shows if modified files have been staged <green>
                                or not staged yet <red>)
        git log                 (shows a log of all the pushes we have made)




Adding new repository and ssh key


1) On your development device, go into the directory you want to set as the github repository

        cd project/

2) Initialize the directory to be a github repository

        git init

3) Set your global variables for name and email which will be used each time make a commit

        git config --global user.name "YourName"
        git config --global user.email "your_email@something.com"
        git config --list               (to verify)

4) Link that repository to your github account

        a) Go to your github account on Google and create a new repository
        b) In the top, click the code button and copy the HTTPS URL for that repository
        c) Link the repository to the directory
                git remote add origin <<paste the HTTPS link here>>
        d) If there are no files in it yet, create a test file
                touch test.txt
        e) Generate a personal access token to use for authentication
                - On github, go to you profile, and click settings
                - Scroll down to Developer Settings
                - Under Personal access tokens, generate a classic token (no experation date if you don't have one)
                - Check the repo box
                - Copy the token it shows you!! (paste it in a file just to be safe)
        f) Stage, commit, and push the stuff to github
                git add .
                git commit -m "Initial Commit"
                git push origin master
        g) Enter your github username when prompted
        h) For the password, paste the token you just copied, this should push it to github and you should be able
                to see the file in the github repository online

5) Generate an ssh key to use rather than username and password and link it to your account (if you have alreay done this, go to next step)

        ssh-keygen -t rsa -C "your_email@you.com"               (keep default location and skip passwords) [it's bad practice but it's okay :)]

        b) cat the public key you just created

                cat ~/.ssh/id_rsa.pub

        c) Go to github online, go to your user settings-->SSH and GPG Keys--> Click New SSH key button
        d) Name it something and paste the entire key you cat'ed earlier and click "Add Key"

6) Reset the origin to use SSH over HTTPS

        a) Go to github online, in the repository on the "code" dropdown, copy the ssh URL
                git remote set-url origin <paste the ssh URL>
        b) Verify it changed
                git remote -v           (you should see git@github rather than https://...)
7) Test it

        a) Make a change in the directory (remove a file or add one or edit it)
        b) Stage it, commit it, and push it
                git add .
                git commit -m "SSH Test Commit"
                git push
        c) Celebrate if we documented this correctly

8) Troubleshooting

        On step 7:
                If it still did not push, set the upstream to your master branch
                        git push --set-upstream origin master
